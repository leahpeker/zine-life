# Zine Life - Backend & Authentication Implementation Plan

## STATUS UPDATE (2025-07-01)
ðŸŽ‰ **MAJOR PROGRESS COMPLETED** ðŸŽ‰

## Project Architecture Changes
- [x] âœ… Restructure project to separate frontend and backend
- [x] âœ… Frontend: Move current Svelte app to `/frontend` directory
- [x] âœ… Backend: Create Rust API server in `/backend` directory
- [x] âœ… Database: PostgreSQL for production and development

## Backend Infrastructure (Rust)
### Core Setup
- [x] âœ… Initialize new Rust project with Cargo
- [x] âœ… Set up Actix-web framework
- [x] âœ… Set up SeaORM for database operations
- [x] âœ… Configure Neon PostgreSQL database connection
- [x] âœ… Set up database migrations with SeaORM
- [x] âœ… Set up CORS for frontend communication
- [x] âœ… Environment configuration (.env files)
- [x] âœ… Error handling and logging setup
- [x] âœ… Configure for Shuttle.rs deployment

### Database Schema Design
- [x] âœ… Users table (id, email, name, avatar_url, provider, provider_id, created_at, updated_at)
- [x] âœ… Designs table (id, user_id, title, canvas_data, canvas_background, canvas_size, is_public, created_at, updated_at)
  - Note: is_public defaults to false (private by default)
  - User can make public when downloading/publishing
- [x] âœ… Sessions table (id, user_id, token, expires_at, created_at)
- [ ] Design_shares table (optional - for sharing designs)

### Authentication System
- [x] âœ… OAuth integration setup (oauth2 crate)
- [x] âœ… Google OAuth provider configuration
- [ ] GitHub OAuth provider configuration
- [x] âœ… JWT token generation and validation
- [x] âœ… Session management middleware
- [x] âœ… Logout functionality
- [ ] Token refresh mechanism

### API Endpoints
#### Authentication
- [x] âœ… GET /auth/google - Redirect to Google OAuth
- [ ] GET /auth/github - Redirect to GitHub OAuth
- [x] âœ… GET /auth/google/callback - Handle Google OAuth callback
- [ ] GET /auth/callback/github - Handle GitHub OAuth callback
- [x] âœ… POST /auth/logout - Logout user
- [x] âœ… GET /auth/me - Get current user info

#### Designs/Zines
- [x] âœ… GET /api/designs - List user's designs (authenticated)
- [x] âœ… GET /api/designs/public - List public designs for homepage
- [x] âœ… GET /api/designs/:id - Get specific design
- [x] âœ… POST /api/designs - Create new design (authenticated)
- [x] âœ… PUT /api/designs/:id - Update design (authenticated, owner only)
- [x] âœ… DELETE /api/designs/:id - Delete design (authenticated, owner only)
- [ ] POST /api/designs/:id/duplicate - Duplicate a public design

#### Health & Info
- [x] âœ… GET /health - Health check endpoint
- [ ] GET /api/stats - Public stats (total designs, users, etc.)

## Frontend Changes
### Project Structure
- [x] âœ… Move current Svelte app to subdirectory
- [x] âœ… Update build configuration for new structure
- [x] âœ… Set up API base URL configuration

### New Components & Pages
- [x] âœ… Homepage component (like Canva)
  - [x] âœ… Hero section with app description
  - [x] âœ… Login buttons (Google OAuth)
  - [x] âœ… Public designs gallery section
  - [x] âœ… "Start Creating" button (redirects to editor)
  - [x] âœ… Templates section
  - [x] âœ… Features section
  - [x] âœ… Footer with links
- [x] âœ… Editor moved to `/editor` route
- [ ] Login page/modal
- [ ] User profile/account page
- [ ] Design gallery page (user's own designs)

### Homepage Design (Canva-inspired)
- [x] âœ… Clean, minimal header with logo and login button
- [x] âœ… Hero section: "Design anything, publish everywhere" with CTA
- [x] âœ… Featured/Recent public designs grid
- [x] âœ… Templates grid with categories
- [x] âœ… Features section highlighting editor capabilities
- [x] âœ… Responsive design for mobile/desktop
- [x] âœ… Gradient hero background
- [x] âœ… Professional color scheme (purple/blue theme)

### Authentication Flow
- [ ] Auth store/context for user state
- [ ] Protected routes (redirect to login if not authenticated)
- [ ] Login redirect after authentication
- [ ] Logout functionality
- [ ] User avatar/name display in header

### API Integration
- [ ] HTTP client setup (fetch/axios)
- [ ] API error handling
- [ ] Loading states for API calls
- [ ] Save design to backend when editing
- [ ] Auto-save functionality (debounced)
- [ ] Load design from backend
- [ ] Design list/gallery integration

## DevOps & Deployment
- [x] âœ… Shuttle.rs deployment configuration
- [x] âœ… Environment variable management for Shuttle.rs
- [x] âœ… Neon PostgreSQL database setup
- [x] âœ… Database migration scripts for production
- [ ] Frontend build process updates (Vercel)
- [x] âœ… CORS configuration for production (Vercel frontend + Shuttle backend)
- [ ] Rate limiting setup
- [ ] Security headers

## Security Considerations
- [ ] CSRF protection
- [x] âœ… Input validation and sanitization
- [x] âœ… SQL injection prevention (SeaORM handles this)
- [x] âœ… Secure session management
- [x] âœ… Environment secrets management
- [ ] HTTPS enforcement in production

## Testing
- [x] âœ… Backend unit tests (9/9 working tests)
- [x] âœ… API integration tests
- [x] âœ… OAuth authentication tests
- [ ] Frontend component tests
- [ ] End-to-end authentication flow tests

## ðŸš¨ NEXT PRIORITIES
1. **Post-punk styling theme** - Update homepage and editor to have a post-punk aesthetic
2. Frontend auth integration (connect to backend OAuth)
3. Design save/load integration
4. User profile/dashboard
5. Real design gallery with backend data

## Design Notes
- **POST-PUNK AESTHETIC NEEDED**: Update the current purple/blue professional theme to a grittier post-punk style:
  - Darker color scheme (blacks, whites, neons)
  - More angular, edgy design elements
  - Typography with character (maybe stencil or industrial fonts)
  - High contrast design
  - Underground zine/fanzine visual inspiration

## Optional Future Features
- [ ] Design collaboration (sharing edit access)
- [ ] Design comments/feedback
- [ ] Design templates/categories
- [ ] User profiles with bio
- [ ] Design likes/favorites
- [ ] Export history tracking
- [ ] Email notifications for shares

## Development Order Priority âœ… CURRENT STATUS
1. âœ… Backend infrastructure setup - DONE
2. âœ… Database schema and migrations - DONE
3. âœ… Basic authentication (Google OAuth first) - DONE
4. âœ… Design CRUD API endpoints - DONE
5. âœ… Frontend homepage creation - DONE
6. ðŸ”„ Frontend auth integration - IN PROGRESS
7. [ ] Design save/load integration
8. [ ] Public designs gallery (backend integration)
9. [ ] Polish and testing
10. [ ] Post-punk aesthetic overhaul